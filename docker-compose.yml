
volumes:
  n8n_storage:
  ollama_storage:
  qdrant_storage:
  open-webui:

x-n8n: &service-n8n
  image: n8nio/n8n
  environment:
    - GENERIC_TIMEZONE: Asia/Ho_Chi_Minh
    - N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
    - N8N_REINSTALL_MISSING_PACKAGES: true
    - N8N_HOST: 0.0.0.0
    - N8N_PORT: 5678
    - N8N_PROTOCOL: http


    # database
    - DB_POSTGRESDB_USER: ${DB_POSTGRESDB_USER}
    - DB_POSTGRESDB_PASSWORD: ${DB_POSTGRESDB_PASSWORD}
    - DB_POSTGRESDB_HOST: aws-0-us-east-2.pooler.supabase.com
    - DB_POSTGRESDB_DATABASE: postgres
    - DB_TYPE: postgresdb
    - N8N_DISABLE_PRODUCTION_MAIN_PROCESS: true

    # security
    - EXECUTIONS_DATA_PRUNE: true
    - EXECUTIONS_DATA_MAX_AGE: 168
    - EXECUTIONS_DATA_PRUNE_MAX_COUNT: 50000
    - EXECUTIONS_TIMEOUT_MAX: 7200
    - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: false

    # runners
    - N8N_RUNNERS_ENABLED: true
    - N8N_RUNNERS_MODE: external
    
    # queue
    - EXECUTIONS_MODE: queue
    - QUEUE_BULL_REDIS_HOST: redis
    - QUEUE_BULL_REDIS_PORT: 6379
    - WEBHOOK_URL: https://n.g86.xyz


services:
  n8n-import:
    <<: *service-n8n
    container_name: n8n-import
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --separate --input=/backup/credentials && n8n import:workflow --separate --input=/backup/workflows"
    volumes:
      - ./n8n/backup:/backup

  n8n:
    <<: *service-n8n
    restart: unless-stopped
    container_name: n8n
    ports:
      - 5678/tcp
      - ./n8n/backup:/backup
      - ./shared:/data/shared
    volumes:
      - n8n_storage:/home/node/.n8n
    depends_on:
      n8n-import:
        condition: service_completed_successfully

  
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    restart: unless-stopped
    container_name: open-webui
    expose:
      - 8080/tcp
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - open-webui:/app/backend/data

  redis:
    image: redis:6-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", "", "--appendonly", "no"]

  n8n-runner-1:
    image: docker.n8n.io/n8nio/n8n:1.100.1
    restart: always
    entrypoint: ["/usr/local/bin/task-runner-launcher", "javascript"]
    environment:
      - N8N_RUNNERS_TASK_BROKER_URI: n8n:5679
      - N8N_RUNNERS_MAX_CONCURRENCY: 3
      - N8N_RUNNERS_AUTO_SHUTDOWN_TIMEOUT: 60
    depends_on:
      - n8n
    
  n8n-runner-2:
    image: docker.n8n.io/n8nio/n8n:1.100.1
    restart: always
    entrypoint: ["/usr/local/bin/task-runner-launcher", "javascript"]
    environment:
      - N8N_RUNNERS_TASK_BROKER_URI: n8n:5679
      - N8N_RUNNERS_MAX_CONCURRENCY: 3
    depends_on:
      - n8n

  searxng:
    container_name: searxng
    image: docker.io/searxng/searxng:latest
    restart: unless-stopped
    expose:
      - 8080/tcp
    volumes:
      - ./searxng:/etc/searxng:rw
    environment:
      - SEARXNG_BASE_URL: https://${SEARXNG_HOSTNAME:-localhost}/
      - UWSGI_WORKERS: ${SEARXNG_UWSGI_WORKERS:-4}
      - UWSGI_THREADS: ${SEARXNG_UWSGI_THREADS:-4}
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID

  neo4j:
    image: neo4j:latest
    expose:
      - 7473/tcp
      - 7474/tcp
      - 7687/tcp
    environment:
        - NEO4J_AUTH: ${NEO4J_AUTH:-"neo4j/g86-io"}
    restart: always

  flowise:
    image: flowiseai/flowise
    restart: unless-stopped
    container_name: flowise
    expose:
      - 3001/tcp
    environment:
        - PORT: 3001
        - FLOWISE_USERNAME: g86-io
        - FLOWISE_PASSWORD: g86-io
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
        - ~/.flowise:/root/.flowise
    entrypoint: /bin/sh -c "sleep 3; flowise start"

  webui:
    image: ghcr.io/open-webui/open-webui:main
    restart: unless-stopped
    container_name: open-webui
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - open-webui:/app/backend/data

  qdrant:
    image: qdrant/qdrant
    hostname: qdrant
    container_name: qdrant
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage

  cloudflared:
    image: cloudflare/cloudflared:latest
    depends_on:
      - n8n
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN}

